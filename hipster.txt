Коренной переворот в транспортной промышленности произвело появление уни-
версальных грузовых контейнеров. Эти контейнеры имели стандартные размеры
и были специально спроектированы таким образом, чтобы для их перемещения
между различными видами транспортных средств требовался минимум ручного
труда. Все виды грузового транспорта создавались с учетом характеристик этих
контейнеров – от автопогрузчиков и кранов до грузовиков, поездов и кораблей.
Контейнеры-рефрижераторы и изолированные контейнеры предназначены для
перевозки грузов с жестко заданным температурным режимом, например некото-
рых продуктов питания и фармацевтических товаров. Кроме того, преимущества
стандартизации распространились и на другие вспомогательные системы, такие
как система маркировки грузов и система герметизации и опечатывания контей-
неров. Это означает, что ответственность за содержимое контейнеров полностью
перекладывается на производителей транспортируемых товаров, а работники
транспорта могут полностью сосредоточиться на перевозке и хранении самих кон-
тейнеров.

Основная цель программной среды Docker – перенести преимущества стандарти-
зации контейнеров в область информационных технологий. В последние годы про-
граммные системы отличаются впечатляющим разнообразием. Прошли времена
технологии LAMP 1 , реализованной на одном компьютере. Типичная современная
система может состоять из фреймворков JavaScript, баз данных NoSQL, очередей
сообщений, прикладных программных интерфейсов REST и внутренних компо-
нентов, написанных на различных языках программирования. Такой стек должен
частично или полностью работать на разнообразной аппаратуре – от личного ком-
пьютера или ноутбука разработчика и небольшого тестового кластера до крупного
промышленного узла провайдера облачных сервисов. Все эти среды отличаются
разнообразием, используют различные операционные системы с разными вер-
сиями библиотек и работают на различной аппаратуре. Короче говоря, проблема
точно такая же, как и в транспортной промышленности, – для перемещения кода
приложений между разными средами требуется значительный объем ручного тру-
да. Подобно тому, как универсальные контейнеры упрощают перевозку грузов,
контейнеры Docker упрощают перемещение (перенос) программных приложе-
ний. Разработчики могут полностью сосредоточиться на создании приложения, на
проведении цикла тестирования и на вводе приложения в эксплуатацию, не бес-
покоясь о различиях в программных средах и обеспечении необходимых зависи-
мостей. Инженеры по эксплуатации могут уделить все внимание специфическим
вопросам обеспечения работы контейнеров, таким как распределение ресурсов,
запуск и остановка контейнеров, перемещение контейнеров между серверами.

Краткая история Docker
В 2008 году Соломон Хайкс (Solomon Hykes) основал компанию dotCloud для
реа­лизации облачной технологии «платформа как услуга» (Platform-as-a-Ser-
vice – PaaS), полностью независимой от какого-либо языка программирования.
Решение вопроса независимости от языка являлось наиболее значимой отличи-
тельной характеристикой компании dotCloud, поскольку существующие «плат-
формы как услуги» были привязаны к конкретным наборам языков (например,
платформа Heroku поддерживала Ruby, платформа Google App Engine поддержи-
вала Java и Python). В 2010 году компания dotCloud приняла участие в разработке
программы Y Combinator accelerator, в результате чего установила связи с новыми
партнерами и начала привлекать серьезных инвесторов. Самое важное событие
произошло в марте 2013 года, когда dotCloud открыла исходные коды Docker,
ключевого компонента, ядра программного сервиса dotCloud. В то время как не-
которые компании опасались разглашения своих «чудо-секретов», компания dot-
Cloud поняла, что Docker принесет гораздо больше пользы, если станет открытым
проектом, управляемым свободным сообществом.

Ранние версии Docker представляли собой немного усовершенствованную
обертку механизма LXC в сочетании с файловой системой с каскадно-объеди-
ненным монтированием, но при этом ввод в эксплуатацию и скорость разработки
были потрясающе быстрыми. В течение шести месяцев проект заработал более
6700 звезд на сайте GitHub и привлек 175 добровольных участников. Это привело
к изменению названия компании с dotCloud на Docker Inc. и к смене ориента-
ции бизнес-модели. Спустя 15 месяцев после релиза 0.1, в июне 2014 года была
представлена версия Docker 1.0. В этой версии было продемонстрировано значи-
тельное улучшение стабильности и надежности, и она была официально объявле-
на «готовой к промышленной эксплуатации», хотя до этого уже использовалась
в полной мере некоторыми компаниями, в том числе Spotify и Baidu. В то же вре-
мя началась работа по превращению из простого механизма контейнеров Docker
в полноценную платформу, сопровождаемая запуском открытого репозитория для
контейнеров Docker Hub.
